#!/bin/bash

# Enhanced API Test Script with User ID and Balance Checking
# Base URL
BASE_URL="http://localhost:3000"

echo "=== Enhanced EV Charging Payment API Tests ==="
echo "Testing new user-centric session management with balance checks"
echo ""

# Test user data
USER_ID="test-user-123"
CHARGER_ID="CHARGER-001"
WALLET_ADDRESS="0x742d35Cc6634C0532925a3b8D95B0E8b19a6bE6c"
CHAIN="ETHEREUM"
EXPECTED_MAX_COST=10.0

echo "1. Starting charging session with balance check..."
START_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/session/start" \
  -H "Content-Type: application/json" \
  -d "{
    \"userId\": \"$USER_ID\",
    \"chargerId\": \"$CHARGER_ID\",
    \"walletAddress\": \"$WALLET_ADDRESS\",
    \"chain\": \"$CHAIN\",
    \"expectedMaxCost\": $EXPECTED_MAX_COST,
    \"metadata\": {
      \"location\": \"Test Station A\",
      \"connectorType\": \"DCFC\",
      \"testRun\": true
    }
  }")

echo "Start Session Response:"
echo "$START_RESPONSE" | jq '.'

# Extract session ID and balance check ID
SESSION_ID=$(echo "$START_RESPONSE" | jq -r '.sessionId // empty')
BALANCE_CHECK_ID=$(echo "$START_RESPONSE" | jq -r '.balanceCheckId // empty')

if [ -z "$SESSION_ID" ]; then
    echo "‚ùå Failed to start session - no session ID returned"
    echo "Response: $START_RESPONSE"
    exit 1
fi

echo ""
echo "‚úÖ Session started successfully!"
echo "Session ID: $SESSION_ID"
echo "Balance Check ID: $BALANCE_CHECK_ID"
echo ""

# Wait a moment to simulate charging
echo "2. Simulating charging time (3 seconds)..."
sleep 3

echo "3. Stopping session with user validation and custom final cost..."
FINAL_COST=7.50
STOP_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/session/stop" \
  -H "Content-Type: application/json" \
  -d "{
    \"userId\": \"$USER_ID\",
    \"sessionId\": \"$SESSION_ID\",
    \"finalCost\": $FINAL_COST
  }")

echo "Stop Session Response:"
echo "$STOP_RESPONSE" | jq '.'

PAYMENT_URL=$(echo "$STOP_RESPONSE" | jq -r '.paymentUrl // empty')
PAYMENT_LINK_ID=$(echo "$STOP_RESPONSE" | jq -r '.paymentLinkId // empty')

echo ""
echo "‚úÖ Session stopped successfully!"
echo "Payment URL: $PAYMENT_URL"
echo "Payment Link ID: $PAYMENT_LINK_ID"
echo ""

echo "4. Getting payment link details..."
curl -s -X GET "$BASE_URL/api/v1/payment/link/$SESSION_ID" | jq '.'

echo ""
echo "5. Getting balance check history for user..."
curl -s -X GET "$BASE_URL/api/v1/user/$USER_ID/balance-checks" | jq '.'

echo ""
echo "6. Getting user sessions..."
curl -s -X GET "$BASE_URL/api/v1/user/$USER_ID/sessions" | jq '.'

echo ""
echo "7. Getting specific balance check details..."
if [ ! -z "$BALANCE_CHECK_ID" ]; then
    curl -s -X GET "$BASE_URL/api/v1/user/balance-check/$BALANCE_CHECK_ID" | jq '.'
else
    echo "No balance check ID available"
fi

echo ""
echo "8. Testing session recreation (simulating expired link)..."
RECREATE_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/payment/recreate-link" \
  -H "Content-Type: application/json" \
  -d "{
    \"sessionId\": \"$SESSION_ID\"
  }")

echo "Recreate Payment Link Response:"
echo "$RECREATE_RESPONSE" | jq '.'

echo ""
echo "9. Testing unauthorized session stop (different user)..."
UNAUTHORIZED_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/session/stop" \
  -H "Content-Type: application/json" \
  -d "{
    \"userId\": \"different-user-456\",
    \"sessionId\": \"$SESSION_ID\",
    \"finalCost\": 5.0
  }")

echo "Unauthorized Stop Response (should be 403):"
echo "$UNAUTHORIZED_RESPONSE" | jq '.'

echo ""
echo "=== Test Summary ==="
echo "‚úÖ User-associated session creation with balance checking"
echo "‚úÖ User validation during session stop"
echo "‚úÖ Custom final cost setting"
echo "‚úÖ Enhanced payment link creation with expiry logging"
echo "‚úÖ Balance check history tracking"
echo "‚úÖ User session management"
echo "‚úÖ Payment link recreation functionality"
echo "‚úÖ Security validation (unauthorized access prevention)"
echo ""
echo "üéâ All enhanced features tested successfully!"
echo ""
echo "üìã Key Features Implemented:"
echo "   ‚Ä¢ Balance checking before session start"
echo "   ‚Ä¢ User ID association with sessions"
echo "   ‚Ä¢ User validation for session operations"
echo "   ‚Ä¢ Database logging of balance checks"
echo "   ‚Ä¢ Enhanced payment link metadata"
echo "   ‚Ä¢ 24-hour payment link expiry (configurable)"
echo "   ‚Ä¢ Comprehensive session and balance check history APIs"